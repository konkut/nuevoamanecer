********* REVISAR APUNTES

LARAVEL EXCEL
composer require maatwebsite/excel --with-all-dependencies
php artisan make:export PaymentwithoutpriceExport --model=Paymentwithoutprice

\Log::info('Eliminando denominaciones del modelo: '.$model->cashcount_uuid);

solo a un array {{ implode(', ', $item->amounts) }}
suma de array array_sum($amounts);
lo convierte a array <p>{{ implode(', ', json_decode($item->amounts, true)) }}</p>

$number = 12345.6789;
echo number_format($number, 2); // "12,345.68"


$names = json_decode($item->names, true);
$amounts = json_decode($item->amounts, true);
$commissions = json_decode($item->commissions, true);
if (!is_array($names) || !is_array($amounts) || !is_array($commissions)) {
    // Manejo de error: verifica que los datos decodificados sean válidos
    throw new Exception('Los datos JSON no son válidos.');
}


@php artisan vendor:publish --tag=laravel-assets --ansi --force
composer self-update
composer --version

php artisan make:livewire users
php artisan make:view users-pdf
     /*
        $paymentwithoutprice = Paymentwithoutprice::where('paymentwithoutprice_uuid', $paymentwithoutprice_uuid)->firstOrFail();
        $denominationables = Denominationables::where('denominationable_uuid', $paymentwithoutprice->paymentwithoutprice_uuid)->firstOrFail();
        $denomination = Denomination::where('denomination_uuid', $denominationables->denomination_uuid)->firstOrFail();
        $transactionmethods = Transactionmethod::all();
        $servicewithprices = Servicewithprice::all();
        return view("paymentwithoutprice.edit", compact('paymentwithoutprice', 'denomination', 'transactionmethods', 'servicewithprices'));
        */
        /*$paymentwithoutprice_aux = Paymentwithoutprice::where('paymentwithoutprice_uuid', $paymentwithoutprice_uuid)->firstOrFail();
        $denominationables_aux = Denominationables::where('denominationable_uuid', $paymentwithoutprice_aux->paymentwithoutprice_uuid)->firstOrFail();
        $denomination = Denomination::where('denomination_uuid', $denominationables_aux->denomination_uuid)->firstOrFail();
        $denominationables = Denominationables::where('denomination_uuid', $denomination->denomination_uuid)->get();
        $paymentwithoutpriceUUIDs = $denominationables->pluck('denominationable_uuid')->toArray();
        $servicewithpriceNames = [];
        $transactionmethodNames = [];

        foreach ($paymentwithoutpriceUUIDs as $uuid) {
            $paymentwithoutprice = Paymentwithoutprice::where('paymentwithoutprice_uuid', $uuid)->firstOrFail();
            $servicewithprice = Servicewithprice::where('servicewithprice_uuid', $paymentwithoutprice->servicewithprice_uuid)->firstOrFail();
            $transactionmethod = Transactionmethod::where('transactionmethod_uuid', $paymentwithoutprice->transactionmethod_uuid)->firstOrFail();
            $servicewithpriceNames[] = $servicewithprice->name;
            $transactionmethodNames[] = $transactionmethod->name;
        }
        $servicewithprices = Servicewithprice::all();
        $transactionmethods = Transactionmethod::all();

        return view('paymentwithoutprice.edit', compact('servicewithprices', 'transactionmethods', 'denomination', 'servicewithpriceNames', 'transactionmethodNames'));
    */



    //Validation income from transfer
    $rules = [
      /*'date' => [
        'required',              // El campo es obligatorio
        'date',                 // Validar que sea una fecha válida
        'after_or_equal:today', // La fecha debe ser hoy o una fecha futura (opcional)
      ],*/
      'opening' => [
        'required',
        'numeric',
        'regex:/^\d{1,20}(\.\d{1,2})?$/',
      ],
      /*'closing' => [
        'nullable',
        'numeric',
        'regex:/^\d{1,20}(\.\d{1,2})?$/',
      ],*/
      /*'opening_denomination_uuid' => [
        'required',
        'string',
        'max:36',
      ],
      'closing_denomination_uuid' => [
        'required',
        'string',
        'max:36',
      ]*/
    ];


CTRL + D DUPLICAR CODIGO
CTRL + SHIFT + DIRECCIONALES MOVER CODIGO
CTRL + N BUSCAR
SHIFT + SHIFT BUSCAR


THEME COLORES PROYECTO
FFDAB9
FFA07A
F75C5C


SOLUCION DEL ERROR
sudo chmod -R 775 nuevoamanecer
php artisan livewire:publish --assets
php artisan route:clear
php artisan config:clear
php artisan cache:clear


120bs renovacion dominio hostinger

NAME SERVER hostinger
ns1.dns-parking.com
ns2.dns-parking.com

NAME SERVER DE HOSTGATOR
ns26.hostgator.mx
ns27.hostgator.mx

SEEDER
php artisan make:seeder RoleSeeder
php artisan db:seed --class=RoleSeeder

ACTUALIZAR
php artisan config:clear
php artisan view:clear
php artisan route:clear
php artisan cache:clear
php artisan optimize

composer update

Recompila los assets
npm install
npm run dev

Publica los assets de Livewire
php artisan livewire:publish

Verificar en el navegador
http://127.0.0.1:8000/livewire/livewire.js

eliminar del archivo .gitignore la linea
/public/build

ssh -p 65002 u201205301@217.196.55.84
Nuevoamanecer7.



TABLA VACIA
@if($categories->count())
TABLA
@else
NO HAY REGISTROS
@endif


 {{
          <!--
            <x-nav-link href="{{ route('income.index') }}" :active="request()->routeIs('incomes.index')">
              {{ __('word.income.list') }}
            </x-nav-link>
            <x-nav-link href="{{ route('income.create') }}" :active="request()->routeIs('incomes.create')">
              {{ __('word.income.new') }}
            </x-nav-link>
          -->
          }}


  <form method="POST" id="form_service_create" action="javascript:void(0);">


